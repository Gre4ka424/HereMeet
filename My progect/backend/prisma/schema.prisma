generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  email        String     @unique
  password     String
  name         String
  age          Int
  gender       String
  location     String
  bio          String?
  avatarUrl    String?
  isAdmin      Boolean    @default(false)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt

  // Отношения
  sentMessages     Message[]  @relation("SentMessages")
  receivedMessages Message[]  @relation("ReceivedMessages")
  sentMeetups      Meetup[]   @relation("SentMeetups")
  receivedMeetups  Meetup[]   @relation("ReceivedMeetups")
}

model Message {
  id          Int      @id @default(autoincrement())
  content     String
  createdAt   DateTime @default(now())
  
  // Отношения
  senderId    Int
  sender      User     @relation("SentMessages", fields: [senderId], references: [id], onDelete: Cascade)
  
  receiverId  Int
  receiver    User     @relation("ReceivedMessages", fields: [receiverId], references: [id], onDelete: Cascade)
}

model Meetup {
  id          Int       @id @default(autoincrement())
  date        DateTime
  location    String
  status      String    @default("pending") // pending, accepted, declined
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  
  // Отношения
  initiatorId Int
  initiator   User      @relation("SentMeetups", fields: [initiatorId], references: [id], onDelete: Cascade)
  
  receiverId  Int
  receiver    User      @relation("ReceivedMeetups", fields: [receiverId], references: [id], onDelete: Cascade)
} 